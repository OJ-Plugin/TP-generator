name: Tauri Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

# 添加权限设置
permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${context.ref}`.replace('refs/tags/', ''),
              name: `${context.ref}`.replace('refs/tags/', ''),
              draft: true,
              prerelease: false
            });
            return data.id

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - platform: macos-latest
            target: macos
          - platform: ubuntu-latest
            target: linux
          - platform: windows-latest
            target: windows

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # 修复 Ubuntu 依赖项
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libxdo-dev

      - name: Install frontend dependencies
        run: npm ci # or yarn install or pnpm install

      # macOS 图标处理
      - name: Generate app icons for macOS
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir -p src-tauri/icons/
          brew install imagemagick
          # 使用 magick 命令代替 convert
          magick icon.png -resize 32x32 src-tauri/icons/32x32.png
          magick icon.png -resize 64x64 src-tauri/icons/64x64.png
          magick icon.png -resize 128x128 src-tauri/icons/128x128.png
          magick icon.png -resize 256x256 src-tauri/icons/128x128@2x.png
          magick icon.png -resize 256x256 src-tauri/icons/256x256.png
          magick icon.png -resize 512x512 src-tauri/icons/256x256@2x.png
          magick icon.png -resize 512x512 src-tauri/icons/512x512.png
          magick icon.png -resize 1024x1024 src-tauri/icons/512x512@2x.png
          magick icon.png -resize 1024x1024 src-tauri/icons/icon.png

          # 直接使用 imagemagick 创建 icns 文件
          magick src-tauri/icons/*.png src-tauri/icons/icon.icns

      # Linux 图标处理
      - name: Generate app icons for Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir -p src-tauri/icons/
          sudo apt-get install -y imagemagick
          convert icon.png -resize 32x32 src-tauri/icons/32x32.png
          convert icon.png -resize 64x64 src-tauri/icons/64x64.png
          convert icon.png -resize 128x128 src-tauri/icons/128x128.png
          convert icon.png -resize 256x256 src-tauri/icons/128x128@2x.png
          convert icon.png -resize 256x256 src-tauri/icons/256x256.png
          convert icon.png -resize 512x512 src-tauri/icons/256x256@2x.png
          convert icon.png -resize 512x512 src-tauri/icons/512x512.png
          convert icon.png -resize 1024x1024 src-tauri/icons/512x512@2x.png
          convert icon.png -resize 1024x1024 src-tauri/icons/icon.png

          # 创建一个空的 .icns 文件以满足 Tauri 的要求
          cp src-tauri/icons/icon.png src-tauri/icons/icon.icns

          # 创建 .ico 文件以满足 Tauri 的要求
          convert src-tauri/icons/32x32.png src-tauri/icons/128x128.png src-tauri/icons/256x256.png src-tauri/icons/icon.ico

      # Windows 图标处理
      - name: Generate app icons for Windows
        if: matrix.platform == 'windows-latest'
        run: |
          mkdir -p src-tauri/icons/
          # 在 Windows 上安装 ImageMagick
          choco install imagemagick -y
          magick icon.png -resize 32x32 src-tauri/icons/32x32.png
          magick icon.png -resize 128x128 src-tauri/icons/128x128.png
          magick icon.png -resize 256x256 src-tauri/icons/256x256.png
          magick icon.png -resize 256x256 src-tauri/icons/icon.ico

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-tauri]

    steps:
      - name: Publish release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false
            });